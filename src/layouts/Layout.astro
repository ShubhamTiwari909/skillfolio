---
import Header from "../components/Header.astro";
import { ClientRouter } from "astro:transitions";
import "../styles/global.css";
import { ModeToggle } from "@/components/DarkModeSwitch";
---

<!doctype html>
<html lang="en" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro Basics</title>
		<script
			type="text/partytown"
			is:inline
			src="https://script.tapfiliate.com/tapfiliate.js"
			async></script>
		<script is:inline type="text/partytown">
			(function (t, a, p) {
				t.TapfiliateObject = a;
				t[a] =
					t[a] ||
					function () {
						(t[a].q = t[a].q || []).push(arguments);
					};
			})(window, "tap");

			tap("create", "28553-09fb92", { integration: "javascript" });
			tap("detect");
		</script>

		<!-- Google Optimize -->
		<script
			type="text/partytown"
			is:inline
			defer
			src="https://www.googleoptimize.com/optimize.js?id=GTM-TZDSCNR"
		></script>

		<script
			type="text/partytown"
			is:inline
			src="https://js.sentry-cdn.com/9d003029002f4a56bdb8a7c188cccd15.min.js"
			crossorigin="anonymous"></script>
		<ClientRouter />
	</head>
	<body>
		<Header />
		<ModeToggle client:load />
		<slot />
	</body>
</html>

<script is:inline type="text/partytown">
	const getThemePreference = () => {
		if (
			typeof localStorage !== "undefined" &&
			localStorage.getItem("theme")
		) {
			return localStorage.getItem("theme");
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches
			? "dark"
			: "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");

	if (typeof localStorage !== "undefined") {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ["class"],
		});
	}
</script>
